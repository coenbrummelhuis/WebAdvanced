@username = "user@user.com"
@password = "UserWW123"
### Login to a valid user
POST {{protocol}}{{host}}:{{port}}/auth
Content-Type: application/json
Accept: application/json

{
  "username": {{username}},
  "password": {{password}}
}

> {%
    client.test("Login is working successfully", () => {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.token !== undefined, "Response doesn't contain a token!")
    })
    client.global.set("token", response.body.token);
%}

### User can access restricted content
### Test auth of newly created user!
# MUST HAVE RUN TEST ABOVE!
POST {{protocol}}{{host}}:{{port}}/books/0/bids
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "price": 160
}

> {%
    client.test("Succesfully got permission to bid", () => {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.bidders.some(b => b.bidder === "test@test.com"));
    })
%}

###
### Invalidate the token
###
DELETE {{protocol}}{{host}}:{{port}}/auth
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}
